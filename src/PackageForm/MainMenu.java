/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package PackageForm;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 * created on Jul 20, 2019 11:08:54 AM
 * @author bayramcicek
 */
public class MainMenu extends javax.swing.JFrame {
    
    private static final String CONN_STRING = "jdbc:mysql://127.0.0.1/testdb";
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /** Creates new form MainMenu */
    public MainMenu() {
        initComponents();
        show_city();
    }
    
    public ArrayList<City> cityList() {
        ArrayList<City> cityList = new ArrayList<>();
        
        try {
            con = DriverManager.getConnection(CONN_STRING, LoginForm.getUSERNAME(), LoginForm.getPASSWORD());
            String set_query = "SELECT * FROM cities";
            
            Statement st = con.createStatement();
            ResultSet resultSet = st.executeQuery(set_query);
            
            City city;
            
            while (resultSet.next()) {
                city = new City(resultSet.getInt("id"), resultSet.getString("city_name"), resultSet.getInt("population"));
                cityList.add(city);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return cityList;
        
    }
    
    public void show_city() {
        ArrayList<City> list = cityList();
        DefaultTableModel model = (DefaultTableModel) jTable_display_city.getModel();
        Object[] row = new Object[6];
        
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getCity_id();
            row[1] = list.get(i).getCity_name();
            row[2] = list.get(i).getCity_population();
            model.addRow(row);
            
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDelete_btn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        id_textField = new javax.swing.JTextField();
        cityName_textField = new javax.swing.JTextField();
        population_textField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_display_city = new javax.swing.JTable();
        pop_int_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("INSERT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jDelete_btn.setText("DELETE");
        jDelete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDelete_btnActionPerformed(evt);
            }
        });

        jButton4.setText("REFRESH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel1.setText("ID:");

        id_textField.setEnabled(false);

        population_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                population_textFieldActionPerformed(evt);
            }
        });
        population_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                population_textFieldKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("City Name:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel3.setText("Population:");

        jTable_display_city.setBackground(new java.awt.Color(227, 175, 175));
        jTable_display_city.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "city_name", "population"
            }
        ));
        jTable_display_city.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_display_cityMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_display_city);

        pop_int_label.setForeground(new java.awt.Color(254, 6, 6));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(id_textField, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(cityName_textField)
                            .addComponent(jLabel3)
                            .addComponent(population_textField)
                            .addComponent(pop_int_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(28, 28, 28)
                                .addComponent(jButton2)
                                .addGap(27, 27, 27)
                                .addComponent(jDelete_btn)))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cityName_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(population_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pop_int_label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jDelete_btn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: INSERT
        
        if ("".equals(population_textField.getText())){
            pop_int_label.setText("Please fill out here");
        } else {
            try {

                String sql = "INSERT INTO cities(city_name, population) "
                        + "VALUES (?, ?)";
               
                con = DriverManager.getConnection(CONN_STRING, LoginForm.getUSERNAME(), LoginForm.getPASSWORD());
                pst = con.prepareStatement(sql);

                pst.setString(1, cityName_textField.getText());

                pst.setString(2, population_textField.getText());
                pst.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) jTable_display_city.getModel();
                model.setRowCount(0);
                show_city();

                JOptionPane.showMessageDialog(null, "INSERTED Successfully ");

                con.close();

            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        
        id_textField.setText("");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here: REFRESH
        DefaultTableModel model = (DefaultTableModel) jTable_display_city.getModel();
        model.setRowCount(0);
        show_city();
        
        cityName_textField.setText("");
        population_textField.setText("");
        pop_int_label.setText("");
        id_textField.setText("");
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here: UPDATE    
        
        int row = jTable_display_city.getSelectedRow();
        String current_id_value;
                   
        if (row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table");
        } else if ("".equals(population_textField.getText())) {
                pop_int_label.setText("Please fill out here");
        } else {

            try {

                con = DriverManager.getConnection(CONN_STRING, LoginForm.getUSERNAME(), LoginForm.getPASSWORD());

                row = jTable_display_city.getSelectedRow();
                current_id_value = (jTable_display_city.getModel().getValueAt(row, 0).toString());
                String updateQuery = "UPDATE cities SET city_name=?, population=? WHERE id="+current_id_value; 

                PreparedStatement pst = con.prepareStatement(updateQuery);
                pst.setString(1, cityName_textField.getText());
                pst.setString(2, population_textField.getText());

                pst.executeUpdate();

                DefaultTableModel model = (DefaultTableModel) jTable_display_city.getModel();
                model.setRowCount(0);   
                show_city();

                JOptionPane.showMessageDialog(null, "UPDATED Successfully ");

            } catch (HeadlessException | SQLException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);
            }
        
        }
        
        id_textField.setText("");
 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable_display_cityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_display_cityMouseClicked
        // TODO add your handling code here:
        int i = jTable_display_city.getSelectedRow();
        TableModel model = jTable_display_city.getModel();
        
        id_textField.setText(model.getValueAt(i, 0).toString());
        cityName_textField.setText(model.getValueAt(i, 1).toString());
        population_textField.setText(model.getValueAt(i, 2).toString());
               
    }//GEN-LAST:event_jTable_display_cityMouseClicked

    private void jDelete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDelete_btnActionPerformed
        
        if ("".equals(id_textField.getText())){
            JOptionPane.showMessageDialog(null, "Please select a row from table");
        } else {
            int option = JOptionPane.showConfirmDialog(null, "Are you sure to DELETE?", "Yes!", JOptionPane.YES_NO_CANCEL_OPTION);
        
            if (option == 0){
                try {
                    // TODO add your handling code here: DELETE
                    con = DriverManager.getConnection(CONN_STRING, LoginForm.getUSERNAME(), LoginForm.getPASSWORD());
                    int row = jTable_display_city.getSelectedRow();
                    String current_id_value = (jTable_display_city.getModel().getValueAt(row, 0).toString());
                    String deleteQuery = "DELETE FROM cities WHERE id="+current_id_value;

                    PreparedStatement pst = con.prepareStatement(deleteQuery);
                    pst.executeUpdate();

                    DefaultTableModel model = (DefaultTableModel) jTable_display_city.getModel();
                    model.setRowCount(0);   
                    show_city();

                    JOptionPane.showMessageDialog(null, "DELETED Successfully ");

                } catch (SQLException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }

                id_textField.setText("");
            }
            
        }
        
        cityName_textField.setText("");
        population_textField.setText("");
      
    }//GEN-LAST:event_jDelete_btnActionPerformed

    private void population_textFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_population_textFieldKeyPressed
        // TODO add your handling code here:
        
        try {
            int i = Integer.parseInt(population_textField.getText());
            pop_int_label.setText("");
        } catch (NumberFormatException ex) {
            pop_int_label.setText("Invalid number");
        }
        
    }//GEN-LAST:event_population_textFieldKeyPressed

    private void population_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_population_textFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_population_textFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cityName_textField;
    private javax.swing.JTextField id_textField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jDelete_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_display_city;
    private javax.swing.JLabel pop_int_label;
    private javax.swing.JTextField population_textField;
    // End of variables declaration//GEN-END:variables

}
